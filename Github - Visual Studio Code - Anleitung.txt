GUTE ANLEITUNG:
 Github einrichten in VisualStudio Code
-https://www.youtube.com/watch?v=Fk12ELJ9Bww

1. NEUES PROJEKT ERSTELLEN UND MIT GIT VERBINDEN
2. GITHUB CLONE WIEDERHERSTELLEN
3. FIREBASE HOSTING (FIREBASE DEPLOY)
4. UPGRADE 
5. VS CODE DEBUGGING
6. FIREBASE IONIC HINZUFÜGEN


1. NEUES PROJEKT ERSTELLEN UND MIT GIT VERBINDEN

1.1 VS Code:
-Projekt erstellen mit z.B. >ionic start Ionic_Blank (eigentlich Namen lowerCase)
-in das Projekt verzeichnis wechseln (Terminal öffnen (Strg+ö))


1.2. Github: 
-Neues Repository erstellen (ohne Readme und gitignore) -->URL: https://github.com/jubbajub/Ionic_Blank.git

1.2.1. VSC: INITIALISIERUNGS BEFEHLE von GITHUB KOPIEREN und im TERMINAL Ausführen:

	git remote add origin https://github.com/jubbajub/tutorial-devdactic-firebase-crud.git
	git branch -M main
	git push -u origin main

	#### ODER ### 

	echo "# Ionic_Blank" >> README.md
	git init
	git add README.md
	git commit -m "first commit"
	git branch -M main
	git remote add origin https://github.com/jubbajub/Ionic_Blank.git
	git push -u origin main

1.3. VSC: ÄNDERUNGEN IN DEN DATEIEN DURCHFÜHREN

1.4. VSC: COMMIT NACHRICHT eingebn Strg+ENTER

1.5. VSC: Änderungen Synchronisiseren ( git push Ionic_Blank master:master )

2.GITHUB CLONE WIEDERHERSTELLEN

2.1 VS Code
2.1.1 Installiere neueste Versionen von angular, ionic, npm, node
2.1.2 Github: kopiere von GITHUB die webadresse z.B. https://github.com/jubbajub/devdactic-ionic-4-firebase-angularfire-2.git

2.1.3 Terminal: gehe ins Verzeichnis deiner Wahl
>git clone https://github.com/jubbajub/devdactic-ionic-4-firebase-angularfire-2.git

2.1.4 Terminal: gehe ins Projektverzeichnis 
>cd devdactic-ionic-4-firebase-angularfire-2

2.1.5 Terminal: Abhängigkeiten installieren
>npm install (Dauer ca. 5 Minuten)

2.1.6 Terminal: Projekt lokal starten
>ionic serve ( oder ng serve etc.)

2.1.7 Man erhält bei der migration sehr viele Sicherheitsfehler, diese kan man mit  dem Befehl >npm audit  fix beheben, allerdings funktioniert anschließend vermutlich >ionic serve nicht mehr, dann muss man einen Angular Versionsupdate durchführen (zb. von 8 auf 10)

2.2 VERSIONS UPDATE Angular 8 nach 10 immer schrittweise, also 8 auf neun, dann 9 auf 10 (WICHTIG--> https://update.angular.io)

2.2.1 >ng update @angular/core@8 @angular/cli@8 --force
-->Änderung in Git commiten

2.2.2 >ng update @angular/core@9 @angular/cli@9 --force
-->Änderung in Git commiten

2.2.3 >ng update @angular/core @angular/cli --force (Befehl um auf neueste Version zu updaten)
-->Änderung in Git commiten

2.2.4 >ionic serve sollte jetzt funktionieren, falls nicht dann eventuell umprogrammieren, da einige Befehle sich geändert haben ( zb. Routing etc.)

2.3 GITHUB CLI installieren und Repository in CLI erstellen
2.3.1 in der neuesten Realease die MSI dowloaden und Windows installieren 
https://github.com/cli/cli/releases/tag/v2.4.0

2.3.2 FUNKTIONIERT NICHT:
>gh repo create tutorial-devdactic-firebase-crud --private --source=. --remote=upstream

3. FIREBASE HOSTING (FIREBASE DEPLOY)
https://devdactic.com/host-ionic-website-firebase/

3.1 VSC:  
im Entwicklungsmodus
>ionic build --release

oder im Produktionsmodus mit --prod flag, aber dann muss "app/environments/environment.prod.ts" mit Firebasedaten gefüllt werden.
>ionic build --prod --release

3.2. Firebase Hosting
>npm install -g firebase-tools


>firebase logout (Wichtig: Dadurch werde Anmeldefehler umgangen)

>firebase login
>firebase init (Das folgende ERgebnis kommt nach dem firebase init Befehl!)

Nach den ganzen Eingaben nur noch ....
>firebase deploy (Hiernach erhält man seinen Link ->Das wars!

-->WEITERE ANGABEN UND ERGEBNIS

=== Project Setup

First, let's associate this project directory with a Firebase project.
You can create multiple project aliases by running firebase use --add,
but for now we'll just set up a default project.

? Please select an option: Use an existing project
? Select a default Firebase project for this directory: ionic-projekte (Ionic-Projekte)
i  Using project ionic-projekte (Ionic-Projekte)

=== Hosting Setup

Your public directory is the folder (relative to your project directory) that
will contain Hosting assets to be uploaded with firebase deploy. If you
have a build process for your assets, use your build's output directory.

? What do you want to use as your public directory? www
? Configure as a single-page app (rewrite all urls to /index.html)? Yes
? Set up automatic builds and deploys with GitHub? No
? File www/index.html already exists. Overwrite? No
i  Skipping write of www/index.html

i  Writing configuration info to firebase.json...
i  Writing project information to .firebaserc...

+  Firebase initialization complete!
------------------------------------------

+  Deploy complete!

Project Console: https://console.firebase.google.com/project/ionic-projekte/overview
Hosting URL: https://ionic-projekte.web.app

4. UPGRADE  (WICHTIG IMMER als ADMINISTRATOR)

4.1 UPGRADE npm 
>npm -v
>npm install -g npm (um npm auf den neusten Stand zu bringen)

anschließend
>npm update -g ( um alle anderen Packages upzudaten)


4.2 UPGRADE NodeJS
>node -v

Installation von MSI-Paket in Windows hier runterladen: https://nodejs.org/en/download/ und einfach installieren

4.3 UPGRADE IONIC -->https://ionicframework.com/docs/intro/upgrading-to-ionic-6
>ionic info

>npm install @ionic/angular@6

4.4 UPDATE VS CODE
-Unter Einstelllungen -->"nach Aktualisiserung suchen..." klicken

4.5 UPGRADE Angular

ACHTUNG: Versions UPDATE immer in einer SChritten durchführen siehe 2.2 oben  bzw. hier https://update.angular.io/ 

>ng --version
>npm install -g @angular/cli


5. VS CODE DEBUGGING
5.1 Javascript Debugger installieren
-VS Code -->Extensions (Strg+Umschalt+X): Javascript Debugger installieren

5.2 Javascript Debugger einrichten
siehe hier:
https://code.visualstudio.com/docs/nodejs/angular-tutorial
5.2.1 ANGULAR Konfiguration 
	{
	"version": "0.2.0",
	"configurations": [
		{
		"type": "pwa-chrome",
		"request": "launch",
		"name": "Launch CHROME against localhost",
		"url": "http://localhost:4200",
		"webRoot": "${workspaceFolder}"
		}
	]
	}

5.2.2 IONIC Konfiguration 
	{
	"version": "0.2.0",
	"configurations": [
		{
		"type": "pwa-chrome",
		"request": "launch",
		"name": "Launch CHROME against localhost",
		"url": "http://localhost:8100",
		"webRoot": "${workspaceFolder}"
		}
	]
	}

5.2.3 DEBUGGER Starten
>ionic serve
in VSC F5 drücken

6. FIREBASE IONIC HINZUFÜGEN
6.1 TUTORIAL https://ionicthemes.com/tutorials/add-a-firebase-database-to-your-ionic-app

6.1.1 VORBEREITUNG
>ionic start tutorial-ionicthemes-firebase-crud blank
>cd .\tutorial-ionicthemes-firebase-crud
>ng add @angular/fire

//Test ob installation erfolgreich
>ionic serve

6.1.2 FIREBASE APP ERSTELLEN UND API-KEY KOPIEREN
1. Project auswählen unter: https://console.firebase.google.com/project/ 
2. "+ App hinzufügen" auswählen für "WWW"
3. App-Nickname eingeben und "App registrieren" klicken
4. Unter https://console.firebase.google.com/project/  Anwendung (App) suchen und unter Einstellungen (Zahnrad) nach Konfiguraation suchen:
	const firebaseConfig = {
	apiKey: "XXX",
	authDomain: "sd-projects-6161.firebaseapp.com",
	projectId: "sd-projects-6161",
	storageBucket: "sd-projects-6161.appspot.com",
	messagingSenderId: "490452213204",
	appId: "1:490452213204:web:14c427c1ecddbfeabe0a41",
	measurementId: "G-NGLQF2P9EN"
	};
5.unter "src\environments\environment.ts" die firebaseConfig einfügen
6 src\app\app.module.ts:
	import { NgModule } from '@angular/core';
	import { BrowserModule } from '@angular/platform-browser';
	import { RouteReuseStrategy } from '@angular/router';

	import { IonicModule, IonicRouteStrategy } from '@ionic/angular';

	import { AppComponent } from './app.component';
	import { AppRoutingModule } from './app-routing.module';

	//NEUE IMPORTS für FIRESTORE
	import { ReactiveFormsModule } from '@angular/forms';
	import { provideFirebaseApp, initializeApp } from '@angular/fire/app';
	import { environment } from 'src/environments/environment';
	import { getFirestore, provideFirestore } from '@angular/fire/firestore';

	@NgModule({
	declarations: [AppComponent],
	entryComponents: [],
	imports: [
		BrowserModule,
		IonicModule.forRoot(),
			AppRoutingModule,
			ReactiveFormsModule,
			provideFirebaseApp(() => initializeApp(environment.firebase)),
			provideFirestore(() => getFirestore())
	],
	providers: [{ provide: RouteReuseStrategy, useClass: IonicRouteStrategy }],
	bootstrap: [AppComponent],
	})
	export class AppModule {}

7. FIREBASE ist nun eingeriehctet, ab nun mit CRUD - Tutorial weiter machen!





